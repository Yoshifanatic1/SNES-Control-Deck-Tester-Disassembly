
;#############################################################################################################
;#############################################################################################################

macro SPC700_RT00_SCDT_GlobalSampleBank(Base)
%InsertMacroAtXPosition(<Base>)
namespace SCDT_GlobalSampleBank

Ptrs:
	dw DATA_4000	:	dw DATA_4000+$0024
	dw DATA_402D	:	dw DATA_402D+$002D
	dw DATA_406C	:	dw DATA_406C+$003F
	dw DATA_40CF	:	dw DATA_40CF+$002D
	dw DATA_40CF	:	dw DATA_40CF+$002D
	dw DATA_410E	:	dw DATA_410E+$0012
	dw DATA_410E	:	dw DATA_410E+$0012
	dw DATA_4183	:	dw DATA_4183+$003F
	dw DATA_41E6	:	dw DATA_41E6+$0012
	dw DATA_4213	:	dw DATA_4213+$0333
	dw DATA_4558	:	dw DATA_4558+$003F
	dw DATA_4558	:	dw DATA_4558+$003F
	dw DATA_45BB	:	dw DATA_45BB+$0075
	dw $FFFF	:	dw $FFFF
	dw $FFFF	:	dw $FFFF
	dw $FFFF	:	dw $FFFF

namespace off
base off
endmacro

;#############################################################################################################
;#############################################################################################################

macro SPC700_RT01_SCDT_GlobalSampleBank(Base)
%InsertMacroAtXPosition(<Base>)
namespace SCDT_GlobalSampleBank

Main:

DATA_4000:
	incbin "Samples/00.brr"

DATA_402D:
	incbin "Samples/01.brr"

DATA_406C:
	incbin "Samples/02.brr"

DATA_40CF:
	incbin "Samples/03.brr"

DATA_410E:
	incbin "Samples/04.brr"

DATA_4183:
	incbin "Samples/05.brr"

DATA_41E6:
	incbin "Samples/06.brr"

DATA_4213:
	incbin "Samples/07.brr"

DATA_4558:
	incbin "Samples/08.brr"

DATA_45BB:
	incbin "Samples/09.brr"

namespace off
base off
endmacro

;#############################################################################################################
;#############################################################################################################

macro SPC700_SCDT_DATA_3E00(Base)
%InsertMacroAtXPosition(<Base>)
namespace SCDT

DATA_3E00:
	db $00,$FF,$E0,$B8,$07,$A8,$01,$FF,$E0,$B8,$07,$A8,$02,$FF,$E0,$B8
	db $07,$A8,$03,$FB,$E0,$B8,$02,$00,$04,$FF,$E0,$B8,$02,$00,$05,$FC
	db $F1,$B8,$0B,$00,$06,$FF,$F1,$B8,$0B,$00,$07,$FF,$E0,$B8,$04,$00
	db $08,$FF,$EE,$B8,$03,$00,$09,$FF,$E0,$B8,$02,$00,$0A,$FC,$F1,$B8
	db $04,$00,$0B,$FF,$E0,$B8,$04,$00,$0C,$FF,$E0,$B8,$0A,$00

namespace off
base off
endmacro

;#############################################################################################################
;#############################################################################################################

macro SPC700_RT00_SCDT_SPC700Engine(Base)
%InsertMacroAtXPosition(<Base>)
namespace SCDT_SPC700Engine

Main:
	CLRP
	MOV X, #$CF
	MOV SP, X
	MOV A, #$00
	MOV X, A
CODE_0807:
	MOV (X+), A
	CMP X, #$E0
	BNE CODE_0807
	INC A
	CALL CODE_113A
	SET5 $48
	MOV A, #$F0
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$10
	MOV !REGISTER_SPC700_Timer0, A
	MOV $53, A
	MOV A, #$01
	MOV !REGISTER_SPC700_ControlRegister, A
CODE_0823:
	MOV A, $1B
	BNE CODE_0878
	MOV Y, #$0A
CODE_0829:
	CMP Y, #$05
	BEQ CODE_0834
	BCS CODE_0837
	CMP $4C, $4D
	BNE CODE_0845
CODE_0834:
	BBS7 $4C, CODE_0845
CODE_0837:
	MOV A, DATA_1528-$01+y
	MOV !REGISTER_SPC700_DSPRegisterIndex, A
	MOV A, DATA_1532-$01+y
	MOV X, A
	MOV A, (X)
	MOV !REGISTER_SPC700_ReadWriteToDSPRegister, A
CODE_0845:
	DBNZ Y, CODE_0829
	MOV $45, Y
	MOV $46, Y
	MOV A, $18
	EOR A, $19
	LSR A
	LSR A
	NOTC
	ROR $18
	ROR $19
CODE_0856:
	MOV Y, !REGISTER_SPC700_Counter0
	BEQ CODE_0856
	PUSH Y
	MOV A, #$20
	MUL YA
	CLRC
	ADC A, $43
	MOV $43, A
	BCC CODE_086D
	CMP $4C, $4D
	BEQ CODE_086D
	INC $4C
CODE_086D:
	MOV A, $53
	POP Y
	MUL YA
	CLRC
	ADC A, $51
	MOV $51, A
	BCC CODE_08BE
CODE_0878:
	CALL CODE_0E20
	MOV A, $00
	AND A, #$F0
	BEQ CODE_0888
	CMP A, #$F0
	BEQ CODE_0888
	CALL CODE_0982
CODE_0888:
	MOV X, #$00
	CALL CODE_0C8B
	MOV A, $1D
	BEQ CODE_089D
	CMP $1C, #$7F
	BCS CODE_089A
	INC $1C
	BRA CODE_089D

CODE_089A:
	MOV $1D, #$00
CODE_089D:
	MOV A, $1C
	MOV Y, #!REGISTER_DSP_MainLeftVolume
	CALL CODE_0D90
	MOV A, $1F
	BEQ CODE_08B4
	CMP $1E, #$7F
	BCS CODE_08B1
	INC $1E
	BRA CODE_08B4

CODE_08B1:
	MOV $1F, #$00
CODE_08B4:
	MOV A, $1E
	MOV Y, #!REGISTER_DSP_MainRightVolume
	CALL CODE_0D90
	JMP CODE_0823

CODE_08BE:
	MOV A, $04
	BEQ CODE_08D4
	MOV X, #$00
	MOV $47, #$01
CODE_08C7:
	MOV A, $31+x
	BEQ CODE_08CE
	CALL CODE_1450
CODE_08CE:
	INC X
	INC X
	ASL $47
	BNE CODE_08C7
CODE_08D4:
	JMP CODE_0823

CODE_08D7:
	MOV A, #$00
	MOV Y, #$01
	MOVW $14, YA
	MOV Y, #$00
CODE_08DF:
	MOV A, ($14)+y
	MOV $2F, A
	MOV A, #$AA
	MOV ($14)+y, A
	CMP A, ($14)+y
	BNE CODE_090F
	MOV A, #$55
	MOV ($14)+y, A
	CMP A, ($14)+y
	BNE CODE_090F
	MOV A, #$CC
	MOV ($14)+y, A
	CMP A, ($14)+y
	BNE CODE_090F
	MOV A, #$3C
	MOV ($14)+y, A
	CMP A, ($14)+y
	BNE CODE_090F
CODE_0903:
	MOV A, $2F
	MOV ($14)+y, A
	INC Y
	BNE CODE_08DF
	INC $15
	BNE CODE_08DF
	RET

CODE_090F:
	INCW $20
	BRA CODE_0903

CODE_0913:
	INCW $20
	BRA CODE_093B

CODE_0917:
	MOV Y, #$00
	MOV A, #$00
	MOVW $20, YA
	MOV X, #$00
CODE_091F:
	MOV A, (X)
	MOV $0100, A
	MOV A, #$AA
	MOV (X), A
	CMP A, (X)
	BNE CODE_0913
	MOV A, #$55
	MOV (X), A
	CMP A, (X)
	BNE CODE_0913
	MOV A, #$CC
	MOV (X), A
	CMP A, (X)
	BNE CODE_0913
	MOV A, #$3C
	MOV (X), A
	CMP A, (X)
	BNE CODE_0913
CODE_093B:
	MOV A, $0100
	MOV (X+), A
	CMP X, #$F0
	BNE CODE_091F
	MOV A, #$D7
	MOV A, #CODE_08D7
	MOV Y, #CODE_08D7>>8
	MOVW $14, YA
	MOV Y, #$00
	MOV X, #$80
CODE_094F:
	MOV A, ($14)+y
	MOV (X+), A
	INC Y
	CMP Y, #$41
	BNE CODE_094F
	CALL $0080
	MOV A, #$00
	MOV X, #$80
CODE_095E:
	MOV (X+), A
	CMP X, #$C1
	BNE CODE_095E
	MOV A, $20
	MOV !REGISTER_SPC700_APUPort2, A
	MOV A, $21
	MOV !REGISTER_SPC700_APUPort3, A
	MOV A, $20
	OR A, $21
	BEQ CODE_0975
	SET0 $2A
CODE_0975:
	RET

CODE_0976:
	MOV A, #$31
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV $00, #$03
	CALL CODE_0E20
	RET

CODE_0982:
	CMP $09, $00
	BEQ CODE_09C3
	MOV A, $00
	BPL CODE_09C3
	SET5 $48
	MOV A, $48
	MOV Y, #!REGISTER_DSP_DSPStatusFlags
	CALL CODE_0D90
	MOV A, #$00
	MOV $04, A
	MOV $61, A
	MOV Y, #!REGISTER_DSP_EchoLeftVolume
	CALL CODE_0D90
	MOV $61, A
	MOV Y, #!REGISTER_DSP_EchoRightVolume
	CALL CODE_0D90
	MOV A, #$FF
	MOV Y, #!REGISTER_DSP_KeyOffBits
	CALL CODE_0D90
	MOV A, $00
	CMP A, #$80
	BEQ CODE_09CD
	CMP A, #$90
	BEQ CODE_09CA
	CMP A, #$91
	BEQ CODE_09C4
	CMP A, #$92
	BEQ CODE_09C7
	CMP A, #$93
	BEQ CODE_09E7
CODE_09C3:
	RET

CODE_09C4:
	JMP CODE_0A65

CODE_09C7:
	JMP CODE_0B63

CODE_09CA:
	JMP CODE_0917

CODE_09CD:
	MOV A, #$55
	MOV !REGISTER_SPC700_APUPort1, A
	MOV $2A, #$00
	CALL CODE_0917
	CALL CODE_0A65
	CALL CODE_0B63
	CALL CODE_09E7
	MOV A, $2A
	MOV !REGISTER_SPC700_APUPort1, A
	RET

CODE_09E7:
	AND $2A, #$8F
	MOV A, #$00
	MOV Y, #$00
	MOVW $22, YA
	MOV $28, #$02
	MOV $29, #$A0
	MOV $12, #$20
	MOV $13, #$08
	MOV $10, #$80
	MOV $11, #$80
	CALL CODE_0AA8
	MOV A, $23
	CMP A, #$07
	BEQ CODE_0A11
	CMP A, #$08
	BEQ CODE_0A11
	SET4 $2A
CODE_0A11:
	MOV A, #$00
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$10
	MOV !REGISTER_SPC700_Timer0, A
	MOV A, #$02
	MOV !REGISTER_SPC700_Timer1, A
	MOV A, #$03
	MOV !REGISTER_SPC700_ControlRegister, A
CODE_0A25:
	MOV A, !REGISTER_SPC700_Counter0
	BEQ CODE_0A25
	MOV A, !REGISTER_SPC700_Counter1
	CMP A, #$08
	BEQ CODE_0A37
	CMP A, #$07
	BEQ CODE_0A37
	SET5 $2A
CODE_0A37:
	MOV A, #$00
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$10
	MOV !REGISTER_SPC700_Timer0, A
	MOV A, #$10
	MOV !REGISTER_SPC700_Timer2, A
	MOV A, #$05
	MOV !REGISTER_SPC700_ControlRegister, A
CODE_0A4B:
	MOV A, !REGISTER_SPC700_Counter0
	BEQ CODE_0A4B
	MOV A, !REGISTER_SPC700_Counter2
	CMP A, #$08
	BEQ CODE_0A5D
	CMP A, #$07
	BEQ CODE_0A5D
	SET6 $2A
CODE_0A5D:
	MOV A, $2A
	AND A, #$70
	MOV !REGISTER_SPC700_APUPort3, A
	RET

CODE_0A65:
	MOV A, #$00
	MOV Y, #$00
	MOVW $22, YA
	MOV $28, #$01
	MOV $29, #$7F
	MOV $12, #$40
	MOV $13, #$09
	MOV $10, #$7F
	MOV $11, #$87
	CALL CODE_0AA8
	MOV $28, #$0E
	MOV $29, #$80
	MOV $12, #$01
	MOV $13, #$71
	MOV $10, #$80
	MOV $11, #$F0
	CALL CODE_0AA8
	MOV A, $22
	MOV !REGISTER_SPC700_APUPort2, A
	MOV A, $23
	MOV !REGISTER_SPC700_APUPort3, A
	MOV A, $22
	OR A, $23
	BEQ CODE_0AA7
	SET1 $2A
CODE_0AA7:
	RET

CODE_0AA8:
	SET5 $48
	MOV A, $48
	MOV Y, #!REGISTER_DSP_DSPStatusFlags
	CALL CODE_0D90
	MOV A, #$00
	MOV Y, #!REGISTER_DSP_EchoEnable
	CALL CODE_0D90
	MOV A, #$00
	MOV Y, #!REGISTER_DSP_EchoFeedback
	CALL CODE_0D90
	MOV A, $28
	MOV Y, #!REGISTER_DSP_EchoDelay
	CALL CODE_0D90
	MOV A, $29
	MOV Y, #!REGISTER_DSP_EchoBufferStartOffset
	CALL CODE_0D90
	CALL CODE_0B4F
	MOV A, #$00
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$10
	MOV !REGISTER_SPC700_Timer0, A
	MOV A, #$01
	MOV !REGISTER_SPC700_ControlRegister, A
CODE_0ADF:
	MOV A, !REGISTER_SPC700_Counter0
	BEQ CODE_0ADF
	DBNZ $12, CODE_0ADF
	CLR5 $48
	MOV A, $48
	MOV Y, #!REGISTER_DSP_DSPStatusFlags
	CALL CODE_0D90
CODE_0AF0:
	MOV A, !REGISTER_SPC700_Counter0
	BEQ CODE_0AF0
	DBNZ $13, CODE_0AF0
	SET5 $48
	MOV A, $48
	MOV Y, #!REGISTER_DSP_DSPStatusFlags
	CALL CODE_0D90
	MOV A, #$01
	MOV Y, #!REGISTER_DSP_EchoDelay
	CALL CODE_0D90
	MOV A, #$C0
	MOV Y, #!REGISTER_DSP_EchoBufferStartOffset
	CALL CODE_0D90
	MOV A, #$7F00
	MOV Y, #$7F00>>8
	MOVW $14, YA
	MOV Y, #$00
	BRA CODE_0B26

CODE_0B19:
	MOV A, ($14)+y
	CMP A, #$88
	BEQ CODE_0B21
	INCW $22
CODE_0B21:
	INC Y
	BNE CODE_0B19
	INC $15
CODE_0B26:
	CMP $15, $10
	BNE CODE_0B19
	BRA CODE_0B38

CODE_0B2D:
	MOV A, ($14)+y
	BEQ CODE_0B33
	INCW $22
CODE_0B33:
	INC Y
	BNE CODE_0B2D
	INC $15
CODE_0B38:
	CMP $15, $11
	BNE CODE_0B2D
CODE_0B3D:
	MOV A, ($14)+y
	CMP A, #$88
	BEQ CODE_0B45
	INCW $22
CODE_0B45:
	INC Y
	BNE CODE_0B3D
	INC $15
	MOV A, $15
	BNE CODE_0B3D
	RET

CODE_0B4F:
	MOV A, #$7F00
	MOV Y, #$7F00>>8
	MOVW $14, YA
	MOV A, #$88
	MOV Y, #$00
CODE_0B59:
	MOV ($14)+y, A
	INC Y
	BNE CODE_0B59
	INC $15
	BNE CODE_0B59
	RET

CODE_0B63:
	MOV $2C, #$00
	MOV X, #$00
	MOV Y, #!REGISTER_DSP_ChannelXLeftVolume
	CALL CODE_0C7F
	MOV Y, #!REGISTER_DSP_ChannelXRightVolume
	CALL CODE_0C7F
	MOV X, #$E9
	MOV Y, #!REGISTER_DSP_ChannelXToggleADSROrGAIN
	CALL CODE_0C7F
	MOV X, #$7E
	MOV Y, #!REGISTER_DSP_ChannelXADSREnvelope
	CALL CODE_0C7F
	MOV Y, #$00
CODE_0B82:
	MOV A, DATA_0BFF+y
	XCN A
	AND A, #$07
	MOV X, A
	MOV A, DATA_0BF7+x
	MOV $0780+y, A
	LSR A
	ADC A, DATA_0BFF+y
	MOV $0700+y, A
	INC Y
	BPL CODE_0B82
	MOV A, #$00
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$40
	MOV !REGISTER_SPC700_Timer2, A
	MOV A, #$05
	MOV !REGISTER_SPC700_ControlRegister, A
	MOV A, #$00
	MOV Y, #!REGISTER_DSP_KeyOffBits
	CALL CODE_0D90
CODE_0BAF:
	MOV A, !REGISTER_SPC700_Counter2
	BEQ CODE_0BAF
	MOV A, #$FF
	MOV Y, #!REGISTER_DSP_KeyOnBits
	CALL CODE_0D90
	MOV $14, #$00
	MOV Y, #$00
CODE_0BC0:
	MOV X, #$08
	MOV $15, #$80
	MOV $47, #$01
CODE_0BC8:
	MOV A, !REGISTER_SPC700_Counter2
	BEQ CODE_0BC8
CODE_0BCD:
	MOV !REGISTER_SPC700_DSPRegisterIndex, X
	MOV A, $0700+y
	SETC
	SBC A, !REGISTER_SPC700_ReadWriteToDSPRegister
	BCC CODE_0BDE
	CMP A, $0780+y
	BCC CODE_0BE1
CODE_0BDE:
	OR $2C, $47
CODE_0BE1:
	ASL $47
	MOV A, X
	CLRC
	ADC A, #$10
	MOV X, A
	BPL CODE_0BCD
	INC Y
	BPL CODE_0BC0
	MOV A, $2C
	MOV !REGISTER_SPC700_APUPort2, A
	BEQ CODE_0BF6
	SET2 $2A
CODE_0BF6:
	RET

DATA_0BF7:
	db $08,$08,$0A,$0C,$0C,$0E,$10,$10

DATA_0BFF:
	db $02,$04,$06,$08,$0A,$0C,$0E,$10,$12,$14,$16,$18,$1A,$1C,$1E,$20
	db $22,$24,$26,$28,$2A,$2C,$2E,$30,$32,$34,$36,$38,$3A,$3C,$3E,$40
	db $42,$44,$46,$48,$4A,$4C,$4E,$50,$52,$54,$56,$58,$5A,$5C,$5E,$60
	db $62,$64,$66,$68,$6A,$6C,$6E,$70,$72,$74,$76,$78,$7A,$7C,$7A,$76
	db $72,$6E,$6B,$67,$64,$60,$5D,$5A,$57,$54,$51,$4E,$4C,$49,$47,$44
	db $42,$3F,$3B,$37,$33,$2F,$2C,$29,$26,$23,$20,$1E,$1C,$1A,$18,$16
	db $14,$12,$10,$0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$07,$06,$05,$04,$03
	db $02,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

CODE_0C7F:
	MOV A, X
	CALL CODE_0D90
	MOV A, Y
	CLRC
	ADC A, #$10
	MOV Y, A
	BPL CODE_0C7F
	RET

CODE_0C8B:
	MOV A, $04+x
	MOV !REGISTER_SPC700_APUPort0+x, A
CODE_0C90:
	MOV A, !REGISTER_SPC700_APUPort0+x
	CMP A, !REGISTER_SPC700_APUPort0+x
	BNE CODE_0C90
	MOV $00+x, A
CODE_0C9A:
	RET

CODE_0C9B:
	CMP Y, #$CA
	BCC CODE_0CA4
	CALL CODE_0F8B
	MOV Y, #$A4
CODE_0CA4:
	CMP Y, #$C8
	BCS CODE_0C9A
	MOV A, $1A
	AND A, $47
	BNE CODE_0C9A
	MOV A, Y
	AND A, #$7F
	CLRC
	ADC A, $50
	CLRC
	ADC A, $02F0+x
	MOV $0361+x, A
	MOV A, $0381+x
	MOV $0360+x, A
	MOV A, $02B1+x
	LSR A
	MOV A, #$00
	ROR A
	MOV $02A0+x, A
	MOV A, #$00
	MOV $B0+x, A
	MOV $0100+x, A
	MOV $02D0+x, A
	MOV $C0+x, A
	OR $5E, $47
	OR $45, $47
	MOV A, $0280+x
	MOV $A0+x, A
	BEQ CODE_0D02
	MOV A, $0281+x
	MOV $A1+x, A
	MOV A, $0290+x
	BNE CODE_0CF8
	MOV A, $0361+x
	SETC
	SBC A, $0291+x
	MOV $0361+x, A
CODE_0CF8:
	MOV A, $0291+x
	CLRC
	ADC A, $0361+x
	CALL CODE_121D
CODE_0D02:
	CALL CODE_1235
CODE_0D05:
	MOV Y, #$00
	MOV A, $11
	SETC
	SBC A, #$34
	BCS CODE_0D17
	MOV A, $11
	SETC
	SBC A, #$13
	BCS CODE_0D1B
	DEC Y
	ASL A
CODE_0D17:
	ADDW YA, $10
	MOVW $10, YA
CODE_0D1B:
	PUSH X
	MOV A, $11
	ASL A
	MOV Y, #$00
	MOV X, #$18
	DIV YA, X
	MOV X, A
	MOV A, DATA_153C+$01+y
	MOV $15, A
	MOV A, DATA_153C+y
	MOV $14, A
	MOV A, DATA_153C+$03+y
	PUSH A
	MOV A, DATA_153C+$02+y
	POP Y
	SUBW YA, $14
	MOV Y, $10
	MUL YA
	MOV A, Y
	MOV Y, #$00
	ADDW YA, $14
	MOV $15, Y
	ASL A
	ROL $15
	MOV $14, A
	BRA CODE_0D4E

CODE_0D4A:
	LSR $15
	ROR A
	INC X
CODE_0D4E:
	CMP X, #$06
	BNE CODE_0D4A
	MOV $14, A
	POP X
	MOV A, $0220+x
	MOV Y, $15
	MUL YA
	MOVW $16, YA
	MOV A, $0220+x
	MOV Y, $14
	MUL YA
	PUSH Y
	MOV A, $0221+x
	MOV Y, $14
	MUL YA
	ADDW YA, $16
	MOVW $16, YA
	MOV A, $0221+x
	MOV Y, $15
	MUL YA
	MOV Y, A
	POP A
	ADDW YA, $16
	MOVW $16, YA
	MOV A, X
	XCN A
	LSR A
	OR A, #$02
	MOV Y, A
	MOV A, $16
	CALL CODE_0D88
	INC Y
	MOV A, $17
CODE_0D88:
	PUSH A
	MOV A, $47
	AND A, $1A
	POP A
	BNE CODE_0D96
CODE_0D90:
	MOV !REGISTER_SPC700_DSPRegisterIndex, Y
	MOV !REGISTER_SPC700_ReadWriteToDSPRegister, A
CODE_0D96:
	RET

CODE_0D97:
	MOV $1D, A
	MOV $1F, A
	MOV $1C, #$60
	MOV $1E, #$60
	MOV A, #!SourceDirectoryOffset_3C00>>8
	MOV Y, #!REGISTER_DSP_SourceDirectoryOffset
	CALL CODE_0D90
	RET

CODE_0DA9:
	MOV Y, #$00
	MOV A, ($40)+y
	INCW $40
	PUSH A
	MOV A, ($40)+y
	INCW $40
	MOV Y, A
	POP A
	RET

CODE_0DB7:
	CALL CODE_3F18
	MOV $08, A
CODE_0DBC:
	MOV Y, A
	BPL CODE_0DC0
	RET

CODE_0DC0:
	MOV $04, A
	ASL A
	MOV X, A
	MOV A, DATA_1556-$01+x
	MOV Y, A
	MOV A, DATA_1556-$02+x
	MOVW $40, YA
	OR A, $41
	BNE CODE_0DD7
	MOV $04, A
	MOV Y, A
	CALL CODE_1111
CODE_0DD7:
	MOV $0C, #$02
CODE_0DDA:
	MOV A, $1A
	EOR A, #$FF
	TSET $0046, A
	RET

CODE_0DE2:
	MOV X, #$0E
	MOV $47, #$80
CODE_0DE7:
	MOV A, #$FF
	MOV $0301+x, A
	MOV A, #$0A
	CALL CODE_0FE4
	MOV $0211+x, A
	MOV $0381+x, A
	MOV $02F0+x, A
	MOV $0280+x, A
	MOV $0400+x, A
	MOV $B1+x, A
	MOV $C1+x, A
	DEC X
	DEC X
	LSR $47
	BNE CODE_0DE7
	MOV $5A, A
	MOV $68, A
	MOV $54, A
	MOV $50, A
	MOV $42, A
	MOV $5F, A
	CALL CODE_0D97
	MOV $59, #$C0
	MOV $53, #$20
CODE_0E1F:
	RET

CODE_0E20:
	MOV Y, $08
	MOV $09, Y
	MOV A, $00
	MOV $08, A
	CMP A, #$F0
	BEQ CODE_0DDA
	CMP A, #$F1
	BEQ CODE_0E38
	CMP A, #$FF
	BEQ CODE_0DB7
	CMP Y, $00
	BNE CODE_0DBC
CODE_0E38:
	MOV A, $04
	BEQ CODE_0E1F
	MOV A, $0C
	BEQ CODE_0E9D
	DBNZ $0C, CODE_0DE2
CODE_0E43:
	CALL CODE_0DA9
	BNE CODE_0E6D
	MOV Y, A
	BNE CODE_0E4E
	JMP CODE_0DC0

CODE_0E4E:
	CMP A, #$80
	BEQ CODE_0E58
	CMP A, #$81
	BNE CODE_0E5C
	MOV A, #$00
CODE_0E58:
	MOV $1B, A
	BRA CODE_0E43

CODE_0E5C:
	DEC $42
	BPL CODE_0E62
	MOV $42, A
CODE_0E62:
	CALL CODE_0DA9
	MOV X, $42
	BEQ CODE_0E43
	MOVW $40, YA
	BRA CODE_0E43

CODE_0E6D:
	MOVW $16, YA
	MOV Y, #$0F
CODE_0E71:
	MOV A, ($16)+y
	MOV $0030+y, A
	DEC Y
	BPL CODE_0E71
	MOV X, #$00
	MOV $47, #$01
CODE_0E7E:
	MOV A, $31+x
	BEQ CODE_0E8C
	MOV A, $0211+x
	BNE CODE_0E8C
	MOV A, #$00
	CALL CODE_0F8B
CODE_0E8C:
	MOV A, #$00
	MOV $80+x, A
	MOV $90+x, A
	MOV $91+x, A
	INC A
	MOV $70+x, A
	INC X
	INC X
	ASL $47
	BNE CODE_0E7E
CODE_0E9D:
	MOV X, #$00
	MOV $5E, X
	MOV $47, #$01
CODE_0EA4:
	MOV $44, X
	MOV A, $31+x
	BEQ CODE_0F1C
	DEC $70+x
	BNE CODE_0F12
CODE_0EAE:
	CALL CODE_0F81
	BNE CODE_0ECA
	MOV A, $80+x
	BEQ CODE_0E43
	CALL CODE_10D2
	DEC $80+x
	BNE CODE_0EAE
	MOV A, $0230+x
	MOV $30+x, A
	MOV A, $0231+x
	MOV $31+x, A
	BRA CODE_0EAE

CODE_0ECA:
	BMI CODE_0EEC
	MOV $0200+x, A
	CALL CODE_0F81
	BMI CODE_0EEC
	PUSH A
	XCN A
	AND A, #$07
	MOV Y, A
	MOV A, DATA_3F00+y
	MOV $0201+x, A
	POP A
	AND A, #$0F
	MOV Y, A
	MOV A, DATA_3F08+y
	MOV $0210+x, A
	CALL CODE_0F81
CODE_0EEC:
	CMP A, #$DE
	BCC CODE_0EF5
	CALL CODE_0F6F
	BRA CODE_0EAE

CODE_0EF5:
	MOV A, $0400+x
	OR A, $1B
	BNE CODE_0F00
	MOV A, Y
	CALL CODE_0C9B
CODE_0F00:
	MOV A, $0200+x
	MOV $70+x, A
	MOV Y, A
	MOV A, $0201+x
	MUL YA
	MOV A, Y
	BNE CODE_0F0E
	INC A
CODE_0F0E:
	MOV $71+x, A
	BRA CODE_0F19

CODE_0F12:
	MOV A, $1B
	BNE CODE_0F1C
	CALL CODE_1379
CODE_0F19:
	CALL CODE_11FD
CODE_0F1C:
	INC X
	INC X
	ASL $47
	BNE CODE_0EA4
	MOV A, $54
	BEQ CODE_0F31
	MOVW YA, $56
	ADDW YA, $52
	DBNZ $54, CODE_0F2F
	MOVW YA, $54
CODE_0F2F:
	MOVW $52, YA
CODE_0F31:
	MOV A, $68
	BEQ CODE_0F4A
	MOVW YA, $64
	ADDW YA, $60
	MOVW $60, YA
	MOVW YA, $66
	ADDW YA, $62
	DBNZ $68, CODE_0F48
	MOVW YA, $68
	MOVW $60, YA
	MOV Y, $6A
CODE_0F48:
	MOVW $62, YA
CODE_0F4A:
	MOV A, $5A
	BEQ CODE_0F5C
	MOVW YA, $5C
	ADDW YA, $58
	DBNZ $5A, CODE_0F57
	MOVW YA, $5A
CODE_0F57:
	MOVW $58, YA
	MOV $5E, #$FF
CODE_0F5C:
	MOV X, #$00
	MOV $47, #$01
CODE_0F61:
	MOV A, $31+x
	BEQ CODE_0F68
	CALL CODE_12C2
CODE_0F68:
	INC X
	INC X
	ASL $47
	BNE CODE_0F61
	RET

CODE_0F6F:
	ASL A
	MOV Y, A
	MOV A, CODE_125C-$BB+y
	PUSH A
	MOV A, CODE_125C-$BC+y
	PUSH A
	MOV A, Y
	LSR A
	MOV Y, A
	MOV A, DATA_12A0-$5E+y
	BEQ CODE_0F89
CODE_0F81:
	MOV A, ($30+x)
CODE_0F83:
	INC $30+x
	BNE CODE_0F89
	INC $31+x
CODE_0F89:
	MOV Y, A
	RET

CODE_0F8B:
	MOV $0211+x, A
	MOV Y, A
	BPL CODE_0F97
	SETC
	SBC A, #$CA
	CLRC
	ADC A, $5F
CODE_0F97:
	MOV Y, #$06
	MUL YA
	MOVW $14, YA
	CLRC
	ADC $14, #SCDT_DATA_3E00
	ADC $15, #SCDT_DATA_3E00>>8
	MOV A, $1A
	AND A, $47
	BNE CODE_0FE3
	PUSH X
	MOV A, X
	XCN A
	LSR A
	OR A, #$04
	MOV X, A
	MOV Y, #$00
	MOV A, ($14)+y
	BPL CODE_0FC4
	AND A, #$1F
	AND $48, #$20
	TSET $0048, A
	OR $49, $47
	MOV A, Y
	BRA CODE_0FCB

CODE_0FC4:
	MOV A, $47
	TCLR $0049, A
CODE_0FC9:
	MOV A, ($14)+y
CODE_0FCB:
	MOV !REGISTER_SPC700_DSPRegisterIndex, X
	MOV !REGISTER_SPC700_ReadWriteToDSPRegister, A
	INC X
	INC Y
	CMP Y, #$04
	BNE CODE_0FC9
	POP X
	MOV A, ($14)+y
	MOV $0221+x, A
	INC Y
	MOV A, ($14)+y
	MOV $0220+x, A
CODE_0FE3:
	RET

CODE_0FE4:
	MOV $0351+x, A
	AND A, #$1F
	MOV $0331+x, A
	MOV A, #$00
	MOV $0330+x, A
	RET

CODE_0FF2:
	MOV $91+x, A
	PUSH A
	CALL CODE_0F81
	MOV $0350+x, A
	SETC
	SBC A, $0331+x
	POP X
	CALL CODE_1240
	MOV $0340+x, A
	MOV A, Y
	MOV $0341+x, A
	RET

CODE_100B:
	MOV $02B0+x, A
	CALL CODE_0F81
	MOV $02A1+x, A
	CALL CODE_0F81
CODE_1017:
	MOV $B1+x, A
	MOV $02C1+x, A
	MOV A, #$00
	MOV $02B1+x, A
	RET

CODE_1022:
	MOV $02B1+x, A
	PUSH A
	MOV Y, #$00
	MOV A, $B1+x
	POP X
	DIV YA, X
	MOV X, $44
	MOV $02C0+x, A
	RET

CODE_1032:
	MOV A, #$00
	MOVW $58, YA
	RET

CODE_1037:
	MOV $5A, A
	CALL CODE_0F81
	MOV $5B, A
	SETC
	SBC A, $59
	MOV X, $5A
	CALL CODE_1240
	MOVW $5C, YA
	RET

CODE_1049:
	MOV A, #$00
	MOVW $52, YA
	RET

CODE_104E:
	MOV $54, A
	CALL CODE_0F81
	MOV $55, A
	SETC
	SBC A, $53
	MOV X, $54
	CALL CODE_1240
	MOVW $56, YA
	RET

CODE_1060:
	MOV $50, A
	RET

CODE_1063:
	MOV $02F0+x, A
	RET

CODE_1067:
	MOV $02E0+x, A
	CALL CODE_0F81
	MOV $02D1+x, A
	CALL CODE_0F81
CODE_1073:
	MOV $C1+x, A
	RET

CODE_1076:
	MOV A, #$01
	BRA CODE_107C

CODE_107A:
	MOV A, #$00
CODE_107C:
	MOV $0290+x, A
	MOV A, Y
	MOV $0281+x, A
	CALL CODE_0F81
	MOV $0280+x, A
	CALL CODE_0F81
	MOV $0291+x, A
	RET

CODE_1090:
	MOV $0280+x, A
	RET

CODE_1094:
	MOV $0301+x, A
	MOV A, #$00
	MOV $0300+x, A
	RET

CODE_109D:
	MOV $90+x, A
	PUSH A
	CALL CODE_0F81
	MOV $0320+x, A
	SETC
	SBC A, $0301+x
	POP X
	CALL CODE_1240
	MOV $0310+x, A
	MOV A, Y
	MOV $0311+x, A
	RET

CODE_10B6:
	MOV $0381+x, A
	RET

CODE_10BA:
	MOV $0240+x, A
	CALL CODE_0F81
	MOV $0241+x, A
	CALL CODE_0F81
	MOV $80+x, A
	MOV A, $30+x
	MOV $0230+x, A
	MOV A, $31+x
	MOV $0231+x, A
CODE_10D2:
	MOV A, $0240+x
	MOV $30+x, A
	MOV A, $0241+x
	MOV $31+x, A
	RET

CODE_10DD:
	MOV $4A, A
	CALL CODE_0F81
	MOV A, #$00
	MOVW $60, YA
	CALL CODE_0F81
	MOV A, #$00
	MOVW $62, YA
	CLR5 $48
	RET

CODE_10F0:
	MOV $68, A
	CALL CODE_0F81
	MOV $69, A
	SETC
	SBC A, $61
	MOV X, $68
	CALL CODE_1240
	MOVW $64, YA
	CALL CODE_0F81
	MOV $6A, A
	SETC
	SBC A, $63
	MOV X, $68
	CALL CODE_1240
	MOVW $66, YA
	RET

CODE_1111:
	MOVW $60, YA
	MOVW $62, YA
	SET5 $48
	RET

CODE_1118:
	CALL CODE_113A
	CALL CODE_0F81
	MOV $4E, A
	CALL CODE_0F81
	MOV Y, #$08
	MUL YA
	MOV X, A
	MOV Y, #!REGISTER_DSP_ChannelXFIRFilerCoefficients
CODE_1129:
	MOV A, DATA_1508+x
	CALL CODE_0D90
	INC X
	MOV A, Y
	CLRC
	ADC A, #$10
	MOV Y, A
	BPL CODE_1129
	MOV X, $44
	RET

CODE_113A:
	MOV $4D, A
	MOV Y, #!REGISTER_DSP_EchoDelay
	MOV !REGISTER_SPC700_DSPRegisterIndex, Y
	MOV A, !REGISTER_SPC700_ReadWriteToDSPRegister
	CMP A, $4D
	BEQ CODE_1173
	AND A, #$0F
	EOR A, #$FF
	BBC7 $4C, CODE_1152
	CLRC
	ADC A, $4C
CODE_1152:
	MOV $4C, A
	MOV Y, #$04
CODE_1156:
	MOV A, DATA_1528-$01+y
	MOV !REGISTER_SPC700_DSPRegisterIndex, A
	MOV A, #$00
	MOV !REGISTER_SPC700_ReadWriteToDSPRegister, A
	DBNZ Y, CODE_1156
	MOV A, $48
	OR A, #$20
	MOV Y, #!REGISTER_DSP_DSPStatusFlags
	CALL CODE_0D90
	MOV A, $4D
	MOV Y, #!REGISTER_DSP_EchoDelay
	CALL CODE_0D90
CODE_1173:
	ASL A
	ASL A
	ASL A
	EOR A, #$FF
	SETC
	ADC A, #$D0
	MOV Y, #!REGISTER_DSP_EchoBufferStartOffset
	JMP CODE_0D90

CODE_1180:
	MOV $5F, A
	RET

CODE_1183:
	MOV $1C, A
	BNE CODE_118B
	INC $1D
	BRA CODE_1192

CODE_118B:
	CMP A, #$FF
	BNE CODE_1192
	MOV $1C, #$00
CODE_1192:
	CALL CODE_0F81
	MOV $1E, A
	BNE CODE_119C
	INC $1F
	RET

CODE_119C:
	CMP A, #$FF
	BNE CODE_11A3
	MOV $1E, #$00
CODE_11A3:
	RET

CODE_11A4:
	AND A, #$1F
	AND $48, #$20
	TSET $0048, A
	OR $49, $47
	RET

CODE_11B0:
	MOV A, #$C3
	MOV Y, #!REGISTER_DSP_SourceDirectoryOffset
	CALL CODE_0D90
	MOV Y, #SCDT_GlobalSampleBank_Ptrs>>8
	MOV A, #SCDT_GlobalSampleBank_Ptrs
	MOVW $14, YA
	MOV Y, #$C300>>8
	MOV A, #$C300
	MOVW $28, YA
	MOV Y, #$00
CODE_11C5:
	MOV A, ($14)+y
	CLRC
	ADC A, #$FF
	MOV ($28)+y, A
	INC Y
	MOV A, ($14)+y
	ADC A, #$9F
	MOV ($28)+y, A
	INC Y
	CMP Y, #$0C
	BNE CODE_11C5
	MOV Y, #SCDT_GlobalSampleBank_Main>>8
	MOV A, #SCDT_GlobalSampleBank_Main
	MOVW $14, YA
	MOV Y, #$DFFF>>8
	MOV A, #$DFFF
	MOVW $28, YA
	MOV Y, #$00
CODE_11E6:
	MOV A, ($14)+y
	MOV ($28)+y, A
	INC Y
	BNE CODE_11E6
	RET

CODE_11EE:
	CALL CODE_0F83
	RET

CODE_11F2:
	INC A
	MOV $0400+x, A
	RET

CODE_11F7:
	INC A
CODE_11F8:
	MOV $1B, A
	JMP CODE_0DDA

CODE_11FD:
	MOV A, $A0+x
	BNE CODE_1234
	MOV A, ($30+x)
	CMP A, #$F7
	BNE CODE_1234
	CALL CODE_0F83
	CALL CODE_0F81
CODE_120D:
	MOV $A1+x, A
	CALL CODE_0F81
	MOV $A0+x, A
	CALL CODE_0F81
	CLRC
	ADC A, $50
	ADC A, $02F0+x
CODE_121D:
	AND A, #$7F
	MOV $0380+x, A
	SETC
	SBC A, $0361+x
	MOV Y, $A0+x
	PUSH Y
	POP X
	CALL CODE_1240
	MOV $0370+x, A
	MOV A, Y
	MOV $0371+x, A
CODE_1234:
	RET

CODE_1235:
	MOV A, $0361+x
	MOV $11, A
	MOV A, $0360+x
	MOV $10, A
	RET

CODE_1240:
	NOTC
	ROR $12
	BPL CODE_1248
	EOR A, #$FF
	INC A
CODE_1248:
	MOV Y, #$00
	DIV YA, X
	PUSH A
	MOV A, #$00
	DIV YA, X
	POP Y
	MOV X, $44
CODE_1252:
	BBC7 $12, CODE_125B
	MOVW $14, YA
	MOVW YA, $0E
	SUBW YA, $14
CODE_125B:
	RET

CODE_125C:
	dw CODE_0F8B
	dw CODE_0FE4
	dw CODE_0FF2
	dw CODE_100B
	dw CODE_1017
	dw CODE_1032
	dw CODE_1037
	dw CODE_1049
	dw CODE_104E
	dw CODE_1060
	dw CODE_1063
	dw CODE_1067
	dw CODE_1073
	dw CODE_1094
	dw CODE_109D
	dw CODE_10BA
	dw CODE_1022
	dw CODE_1076
	dw CODE_107A
	dw CODE_1090
	dw CODE_10B6
	dw CODE_10DD
	dw CODE_1111
	dw CODE_1118
	dw CODE_10F0
	dw CODE_120D
	dw CODE_1180
	dw CODE_11EE
	dw CODE_11F2
	dw CODE_11F7
	dw CODE_11F8
	dw CODE_1183
	dw CODE_11A4
	dw CODE_11B0

DATA_12A0:
	db $01,$01,$02,$03,$00,$01,$02,$01,$02,$01,$01,$03,$00,$01,$02,$03
	db $01,$03,$03,$00,$01,$03,$00,$03,$03,$03,$01,$02,$00,$00,$00,$02
	db $01,$00

CODE_12C2:
	MOV A, $90+x
	BEQ CODE_12CF
	MOV A, #$00
	MOV Y, #$03
	DEC $90+x
	CALL CODE_1355
CODE_12CF:
	MOV Y, $C1+x
	BEQ CODE_12F6
	MOV A, $02E0+x
	CBNE $C0+x, CODE_12F4
	OR $5E, $47
	MOV A, $02D0+x
	BPL CODE_12E8
	INC Y
	BNE CODE_12E8
	MOV A, #$80
	BRA CODE_12EC

CODE_12E8:
	CLRC
	ADC A, $02D1+x
CODE_12EC:
	MOV $02D0+x, A
	CALL CODE_14D6
	BRA CODE_12FB

CODE_12F4:
	INC $C0+x
CODE_12F6:
	MOV A, #$FF
	CALL CODE_14E1
CODE_12FB:
	MOV A, $91+x
	BEQ CODE_1308
	MOV A, #$30
	MOV Y, #$03
	DEC $91+x
	CALL CODE_1355
CODE_1308:
	MOV A, $47
	AND A, $5E
	BEQ CODE_1354
	MOV A, $0331+x
	MOV Y, A
	MOV A, $0330+x
	MOVW $10, YA
CODE_1317:
	MOV A, X
	XCN A
	LSR A
	MOV $12, A
CODE_131C:
	MOV Y, $11
	MOV A, DATA_14F3+$01+y
	SETC
	SBC A, DATA_14F3+y
	MOV Y, $10
	MUL YA
	MOV A, Y
	MOV Y, $11
	CLRC
	ADC A, DATA_14F3+y
	MOV Y, A
	MOV A, $0321+x
	MUL YA
	MOV A, $0351+x
	ASL A
	BBC0 $12, CODE_133C
	ASL A
CODE_133C:
	MOV A, Y
	BCC CODE_1342
	EOR A, #$FF
	INC A
CODE_1342:
	MOV Y, $12
	CALL CODE_0D88
	MOV Y, #$14
	MOV A, #$00
	SUBW YA, $10
	MOVW $10, YA
	INC $12
	BBC1 $12, CODE_131C
CODE_1354:
	RET

CODE_1355:
	OR $5E, $47
CODE_1358:
	MOVW $14, YA
	MOVW $16, YA
	PUSH X
	POP Y
	CLRC
	BNE CODE_136B
	ADC $16, #$1F
	MOV A, #$00
	MOV ($14)+y, A
	INC Y
	BRA CODE_1374

CODE_136B:
	ADC $16, #$10
	CALL CODE_1372
	INC Y
CODE_1372:
	MOV A, ($14)+y
CODE_1374:
	ADC A, ($16)+y
	MOV ($14)+y, A
	RET

CODE_1379:
	MOV A, $71+x
	BEQ CODE_13E0
	DEC $71+x
	BEQ CODE_1386
	MOV A, #$02
	CBNE $70+x, CODE_13E0
CODE_1386:
	MOV A, $80+x
	MOV $17, A
	MOV A, $30+x
	MOV Y, $31+x
CODE_138E:
	MOVW $14, YA
	MOV Y, #$00
CODE_1392:
	MOV A, ($14)+y
	BEQ CODE_13B2
	BMI CODE_139D
CODE_1398:
	INC Y
	MOV A, ($14)+y
	BPL CODE_1398
CODE_139D:
	CMP A, #$C8
	BEQ CODE_13E0
	CMP A, #$ED
	BEQ CODE_13CE
	CMP A, #$DE
	BCC CODE_13D9
	PUSH Y
	MOV Y, A
	POP A
	ADC A, DATA_12A0-$DE+y
	MOV Y, A
	BRA CODE_1392

CODE_13B2:
	MOV A, $17
	BEQ CODE_13D9
	DEC $17
	BNE CODE_13C4
	MOV A, $0231+x
	PUSH A
	MOV A, $0230+x
	POP Y
	BRA CODE_138E

CODE_13C4:
	MOV A, $0241+x
	PUSH A
	MOV A, $0240+x
	POP Y
	BRA CODE_138E

CODE_13CE:
	INC Y
	MOV A, ($14)+y
	PUSH A
	INC Y
	MOV A, ($14)+y
	MOV Y, A
	POP A
	BRA CODE_138E

CODE_13D9:
	MOV A, $47
	MOV Y, #$5C
	CALL CODE_0D88
CODE_13E0:
	CLR7 $13
	MOV A, $A0+x
	BEQ CODE_13F9
	MOV A, $A1+x
	BEQ CODE_13EE
	DEC $A1+x
	BRA CODE_13F9

CODE_13EE:
	SET7 $13
	MOV A, #$60
	MOV Y, #$03
	DEC $A0+x
	CALL CODE_1358
CODE_13F9:
	CALL CODE_1235
	MOV A, $B1+x
	BEQ CODE_144C
	MOV A, $02B0+x
	CBNE $B0+x, CODE_144A
	MOV A, $0100+x
	CMP A, $02B1+x
	BNE CODE_1413
	MOV A, $02C1+x
	BRA CODE_1420

CODE_1413:
	SETP
	INC $00+x
	CLRP
	MOV Y, A
	BEQ CODE_141C
	MOV A, $B1+x
CODE_141C:
	CLRC
	ADC A, $02C0+x
CODE_1420:
	MOV $B1+x, A
	MOV A, $02A0+x
	CLRC
	ADC A, $02A1+x
	MOV $02A0+x, A
CODE_142C:
	MOV $12, A
	ASL A
	ASL A
	BCC CODE_1434
	EOR A, #$FF
CODE_1434:
	MOV Y, A
	MOV A, $B1+x
	CMP A, #$F1
	BCC CODE_1440
	AND A, #$0F
	MUL YA
	BRA CODE_1444

CODE_1440:
	MUL YA
	MOV A, Y
	MOV Y, #$00
CODE_1444:
	CALL CODE_14C1
CODE_1447:
	JMP CODE_0D05

CODE_144A:
	INC $B0+x
CODE_144C:
	BBS7 $13, CODE_1447
	RET

CODE_1450:
	CLR7 $13
	MOV A, $C1+x
	BEQ CODE_145F
	MOV A, $02E0+x
	CBNE $C0+x, CODE_145F
	CALL CODE_14C9
CODE_145F:
	MOV A, $0331+x
	MOV Y, A
	MOV A, $0330+x
	MOVW $10, YA
	MOV A, $91+x
	BEQ CODE_1476
	MOV A, $0341+x
	MOV Y, A
	MOV A, $0340+x
	CALL CODE_14AB
CODE_1476:
	BBC7 $13, CODE_147C
	CALL CODE_1317
CODE_147C:
	CLR7 $13
	CALL CODE_1235
	MOV A, $A0+x
	BEQ CODE_1493
	MOV A, $A1+x
	BNE CODE_1493
	MOV A, $0371+x
	MOV Y, A
	MOV A, $0370+x
	CALL CODE_14AB
CODE_1493:
	MOV A, $B1+x
	BEQ CODE_144C
	MOV A, $02B0+x
	CBNE $B0+x, CODE_144C
	MOV Y, $51
	MOV A, $02A1+x
	MUL YA
	MOV A, Y
	CLRC
	ADC A, $02A0+x
	JMP CODE_142C

CODE_14AB:
	SET7 $13
	MOV $12, Y
	CALL CODE_1252
	PUSH Y
	MOV Y, $51
	MUL YA
	MOV $14, Y
	MOV $15, #$00
	MOV Y, $51
	POP A
	MUL YA
	ADDW YA, $14
CODE_14C1:
	CALL CODE_1252
	ADDW YA, $10
	MOVW $10, YA
	RET

CODE_14C9:
	SET7 $13
	MOV Y, $51
	MOV A, $02D1+x
	MUL YA
	MOV A, Y
	CLRC
	ADC A, $02D0+x
CODE_14D6:
	ASL A
	BCC CODE_14DB
	EOR A, #$FF
CODE_14DB:
	MOV Y, $C1+x
	MUL YA
	MOV A, Y
	EOR A, #$FF
CODE_14E1:
	MOV Y, $59
	MUL YA
	MOV A, $0210+x
	MUL YA
	MOV A, $0301+x
	MUL YA
	MOV A, Y
	MUL YA
	MOV A, Y
	MOV $0321+x, A
	RET

DATA_14F3:
	db $00,$01,$03,$07,$0D,$15,$1E,$29,$34,$42,$51,$5E,$67,$6E,$73,$77
	db $7A,$7C,$7D,$7E,$7F

DATA_1508:
	db $7F,$00,$00,$00,$00,$00,$00,$00,$58,$BF,$DB,$F0,$FE,$07,$0C,$0C
	db $0C,$21,$2B,$2B,$13,$FE,$F3,$F9,$34,$33,$00,$D9,$E5,$01,$FC,$EB

DATA_1528:
	db !REGISTER_DSP_EchoLeftVolume,!REGISTER_DSP_EchoRightVolume,!REGISTER_DSP_EchoFeedback,!REGISTER_DSP_EchoEnable
	db !REGISTER_DSP_DSPStatusFlags,!REGISTER_DSP_KeyOnBits,!REGISTER_DSP_KeyOffBits,!REGISTER_DSP_NoiseEnable
	db !REGISTER_DSP_PitchModulation,!REGISTER_DSP_KeyOffBits

DATA_1532:
	db $61,$63,$4E,$4A
	db $48,$45,$0E,$49
	db $4B,$46

DATA_153C:
	dw $085F,$08DE,$0965,$09F4,$0A8C,$0B2C,$0BD6,$0C8B
	dw $0D4A,$0E14,$0EEA,$0FCD,$10BE

DATA_1556:
	dw DATA_1576,DATA_16FB,DATA_17FE,DATA_190F,DATA_198F,DATA_198F+$04,$0000,DATA_1AB3
	dw DATA_22C0,DATA_2303,DATA_2329,DATA_234C,$0000,$0000,$0000,$0000

DATA_1576:
	incbin "Music/DrMarioScreen1.bin"

DATA_16FB:
	incbin "Music/CheckerboardPatternScreen.bin"

DATA_17FE:
	incbin "Music/DrMarioScreen2.bin"

DATA_190F:
	incbin "Music/WindowEffectTestScreen.bin"

DATA_198F:
	incbin "Music/RainbowSNESLogoScreen.bin"

DATA_1AB3:
	incbin "Music/8BPPLadyScreen.bin"

DATA_22C0:
	incbin "Music/UnknownData1.bin"

DATA_2303:
	incbin "Music/UnknownData2.bin"

DATA_2329:
	incbin "Music/UnknownData3.bin"

DATA_234C:
	incbin "Music/UnknownData4.bin"

namespace off
base off
endmacro

;---------------------------------------------------------------------------

macro SPC700_RT01_SCDT_SPC700Engine(Base)
%InsertMacroAtXPosition(<Base>)
namespace SCDT_SPC700Engine

DATA_3F00:
	db $32,$65,$7F,$98,$B2,$CB,$E5,$FC

DATA_3F08:
	db $19,$32,$4C,$65,$72,$7F,$8C,$98,$A5,$B2,$BF,$CB,$D8,$E5,$F2,$FC

CODE_3F18:
	MOV A, #$AA
	MOV !REGISTER_SPC700_APUPort0, A
	MOV A, #$BB
	MOV !REGISTER_SPC700_APUPort1, A
CODE_3F22:
	MOV A, !REGISTER_SPC700_APUPort0
	CMP A, #$CC
	BNE CODE_3F22
	BRA CODE_3F4B

CODE_3F2B:
	MOV Y, !REGISTER_SPC700_APUPort0
	BNE CODE_3F2B
CODE_3F30:
	CMP Y, !REGISTER_SPC700_APUPort0
	BNE CODE_3F44
	MOV A, !REGISTER_SPC700_APUPort1
	MOV !REGISTER_SPC700_APUPort0, Y
	MOV ($14)+y, A
	INC Y
	BNE CODE_3F30
	INC $15
	BRA CODE_3F30

CODE_3F44:
	BPL CODE_3F30
	CMP Y, !REGISTER_SPC700_APUPort0
	BPL CODE_3F30
CODE_3F4B:
	MOV A, !REGISTER_SPC700_APUPort2
	MOV Y, !REGISTER_SPC700_APUPort3
	MOVW $14, YA
	MOV Y, !REGISTER_SPC700_APUPort0
	MOV A, !REGISTER_SPC700_APUPort1
	MOV !REGISTER_SPC700_APUPort0, Y
	BNE CODE_3F2B
	MOV X, #$31
	MOV !REGISTER_SPC700_ControlRegister, X
	RET
namespace off
base off
endmacro

;#############################################################################################################
;#############################################################################################################

